# Getting the project name
echo "[openstack project list]"
PROJECTS="$(openstack project list --format value | grep "${PRJ_FILTER}")"
echo $PROJECTS


if [ $(echo "$PROJECTS" | wc -c) -lt 5 ]; then
  echo " * WARNING: You don't belong to a project, having a scoped token is not possible"
  return

elif [ $(echo -n "$PROJECTS" | grep -c '^') -eq 1 ]; then
  # Just one project, accepting it...
  PROJECT_ID="$(echo $PROJECTS | awk '{print $1}')"
  PROJECT_NAME="$(echo $PROJECTS | awk '{print $2}')"
  echo " * Selected project $PROJECT_NAME: $PROJECT_ID"
else
  # More than one project, we need a menu
  SAVEIFS=$IFS; IFS=$'\n' read -a lines -d '' <<< "$PROJECTS"
  declare -a lines; IFS=$SAVEIFS
  PS3="Please choose an option: "
  select option in "${lines[@]}"; do
    if [ 1 -le "$REPLY" ] && [ "$REPLY" -le ${#lines[@]} ]; then
      PROJECT_ID="$(echo $option | awk '{print $1}')"
      PROJECT_NAME="$(echo $option | awk '{print $2}')"
      echo " * Selected project $PROJECT_NAME: $PROJECT_ID"
      break;
    fi
  done
fi


# Getting the scoped token:
echo "[openstack --os-project-id $PROJECT_ID token issue]"
SCOPED_TOKEN="$(openstack --os-project-id $PROJECT_ID token issue --format value --column id)"

if [ $? -ne 0 ]; then
    echo " * WARNING: Failed to get scoped token, but unscoped commands should work fine"
    return
fi

export OS_TOKEN=$SCOPED_TOKEN
export OS_PROJECT_ID=$PROJECT_ID

echo " * Setting custom 'swift' alias"
alias swift='swift --os-auth-token $OS_TOKEN --os-storage-url https://object.cscs.ch/v1/AUTH_$OS_PROJECT_ID'

source fix-castor-rclone.env

